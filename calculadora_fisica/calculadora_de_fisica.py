import math
from tkinter import *

titulo = "Calculadora "
vent = Tk()
vent.title("Calculadora Menu")
vent.geometry("450x300")
vent.configure(background="skyblue")
et = Label(vent,text="Seleccione un tema",bg="snow").grid(row=0,column=1,pady=10,padx=5)
color_boton="ghost white"
ancho_boton=18
alto_boton=4

def Velocidadmru():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")
    var=StringVar()

    def Velocidad():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1=float(n1)
        m2=float(n2)
        m3=float(n3)

        Velocidad=(m2-m1)/m3
        txt.insert(0, Velocidad)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=Velocidad).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=2)
    et1_2 = Label(vent, text="Posición inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Posición final", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Tiempo", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)



def Tiempomru():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def Tiempo():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        Tiempo = (m1 - m2)/m3
        txt.insert(0, Tiempo)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=Tiempo).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Posición final", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Posición inicial", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Posiciónmru():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def Posición():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        Posición = m2 + (m3 * m1)
        txt.insert(0, Posición)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=Posición).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Posición inicial", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Velocidadinicialmrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def velocidad0():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        velocidad0 = m3 - (m2 * m1)
        txt.insert(0, velocidad0)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=velocidad0).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Aceleración", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad final", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Velocidadfinalmrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def velocidadf():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        velocidadf = m1 + (m3 * m2)
        txt.insert(0, velocidadf)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=velocidadf).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Aceleración", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Tiempo", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Tiempomrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def tiempo():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        tiempo = (m2 - m1) /m3
        txt.insert(0, tiempo)
    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=tiempo).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Velocidad final", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Aceleracion", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Posiciónimrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x500")
    vent.configure(background="paleturquoise")

    def Posición():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        n4 = txt4.get()
        n5 = txt5.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        m4 = float(n4)
        m5 = float(n5)
        Posición = m2 - (m3 * m1)-(m4*(m1*m1))/2
        txt.insert(0, Posición)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=Posición).grid(row=6, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=6, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Posición final", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=3, column=0, pady=10)
    et1_5 = Label(vent, text="aceleración", bg="snow").grid(row=4, column=0, pady=10)
    et1_6 = Label(vent, text="Velocidad final", bg="snow").grid(row=5, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, columnspan=3, padx=5, pady=10)
    txt5 = Entry(vent, font="Calibri 15")
    txt5.grid(row=5, column=1, columnspan=3, padx=5, pady=10)

def Posiciónfmrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x450")
    vent.configure(background="paleturquoise")

    def Posiciónf():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        n4 = txt4.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        m4 = float(n3)
        Posiciónf = m2 + (m3 * m1)+(m4*m1*m1)/2
        txt.insert(0, Posiciónf)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=Posiciónf).grid(row=5, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=5, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Posición inicial", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=3, column=0, pady=10)
    et1_5 = Label(vent, text="aceleración", bg="snow").grid(row=4, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, columnspan=3, padx=5, pady=10)

def Aceleraciónmrua():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniformemente acelerado")
    vent.geometry("450x300")
    vent.configure(background="paleturquoise")

    def aceleración():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        aceleración = (m2-m3) / m1
        txt.insert(0, aceleración)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=aceleración).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Velocidad final", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)


def Velocidadfinalcl():
    vent = Tk()
    vent.title("Caída libre")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def velocidadfinal():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        velocidadfinal = m1 - (m3 * m2)
        txt.insert(0, velocidadfinal)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=velocidadfinal).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Tiempo", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Gravedad", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Alturainicialcl():
    vent = Tk()
    vent.title("Caída libre")
    vent.geometry("450x450")
    vent.configure(background="paleturquoise")

    def alturao():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        n4 = txt4.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        m4 = float(n4)
        alturao = m1 +m3*m2+(m4 * m2*m2)/2
        txt.insert(0, alturao)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=alturao).grid(row=5, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=5, column=1)
    et1_2 = Label(vent, text="Altura final", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Tiempo", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=3, column=0, pady=10)
    et1_5 = Label(vent, text="Gravedad", bg="snow").grid(row=4, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, columnspan=3, padx=5, pady=10)

def Tiempocl():
    vent = Tk()
    vent.title("Caída libre")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def tiempo():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        tiempo = (m1 - m2)/m3
        txt.insert(0, tiempo)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=tiempo).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad final", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Gravedad", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def Alturadespuésdeuntiempocl():
    vent = Tk()
    vent.title("Caída libre")
    vent.geometry("450x450")
    vent.configure(background="paleturquoise")

    def alturax():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        n4 = txt4.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        m4 = float(n4)
        alturax = m3 + m4*m1-(m2 * m1*m1)/2
        txt.insert(0, alturax)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=alturax).grid(row=6, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=6, column=1)
    et1_2 = Label(vent, text="Tiempo", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Gravedad", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Altura inicial", bg="snow").grid(row=3, column=0, pady=10)
    et1_5 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=4, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, padx=5, columnspan=3, pady=10)

def segundaley():
    vent = Tk()
    vent.title("Segunda Ley de Newton")
    vent.geometry("350x250")
    vent.configure(background="paleturquoise")
    bancho = 5
    balto = 3
    et1_2 = Label(vent, text="Fuerza", bg="snow").grid(row=0, column=0, pady=10)
    et1_3 = Label(vent, text="Masa", bg="snow").grid(row=1, column=0, pady=10)
    et1_4 = Label(vent, text="Aceleracion", bg="snow").grid(row=2, column=0, pady=10)
    et1_5 = Label(vent, text="N", bg="snow").grid(row=0, column=4, pady=10)
    et1_6 = Label(vent, text="kg", bg="snow").grid(row=1, column=4, pady=10)
    et1_7 = Label(vent, text="m/s²", bg="snow").grid(row=2, column=4, pady=10)
    txt  = Entry(vent,font="Calibri 15")
    txt.grid(row=0, column=1, padx=5,columnspan=3, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5,columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1,columnspan=3, padx=5, pady=10)

    def fuerza():
        n1 = txt1.get()
        n2 = txt2.get()
        r = float(n1) * float(n2)
        txt.insert(0, r)

    def masa():
        n3 = txt.get()
        n4 = txt2.get()
        r1 = float(n3) / float(n4)
        txt1.insert(0, r1)

    def aceleracion():
        n4 = txt.get()
        n5 = txt1.get()
        r2 = float(n4) / float(n5)
        txt2.insert(0, r2)
    botonf = Button(vent, text="f", width=bancho, height=balto, bg=color_boton,command=fuerza).grid(row=3, column=1, pady=10)
    botonm = Button(vent, text="m", width=bancho, height=balto, bg=color_boton,command=masa).grid(row=3, column=2, pady=10)
    botona = Button(vent, text="a", width=bancho, height=balto, bg=color_boton,command=aceleracion).grid(row=3, column=3,pady=10)

def terceraley():
    vent = Tk()
    vent.title("Tercera Ley de Newton")
    vent.geometry("400x300")
    vent.configure(background="paleturquoise")
    et=Label(vent, text="Masa(m1)", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, padx=5, columnspan=3, pady=10)
    et1=Label(vent, text="Aceleracion(a1)", bg="snow").grid(row=1, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    et2=Label(vent, text="Masa(m2)", bg="snow").grid(row=2, column=0, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    et3=Label(vent, text="Aceleracion(a2)", bg="snow").grid(row=3, column=0, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, padx=5, columnspan=3, pady=10)
    et4 = Label(vent, text="Kg", bg="snow").grid(row=0, column=4, pady=10)
    et4 = Label(vent, text="Kg", bg="snow").grid(row=2, column=4, pady=10)
    et4 = Label(vent, text="m/s²", bg="snow").grid(row=1, column=4, pady=10)
    et4 = Label(vent, text="m/s²", bg="snow").grid(row=3, column=4, pady=10)
    def m1():
        n1 = txt1.get()
        n2 = txt2.get()
        n3=  txt3.get()
        r = (float(n2) * float(n3)/float(n1))
        txt.insert(0, r)
    def a1():
        n=txt.get()
        n2=txt2.get()
        n3=txt3.get()
        r=(float(n2)*float(n3)/float(n))
        txt1.insert(0,r)
    def m2():
        n=txt.get()
        n1=txt1.get()
        n2=txt3.get()
        r=(float(n)*float(n1)/float(n2))
        txt2.insert(0,r)
    def a2():
        n=txt.get()
        n1=txt1.get()
        n2=txt2.get()
        r=(float(n)*float(n1)/float(n2))
        txt3.insert(0,r)

    botonm1 = Button(vent, text="m1", width=5, height=3, bg=color_boton, command=m1).grid(row=4,column=1,pady=10)
    botona1 = Button(vent, text="a1", width=5, height=3, bg=color_boton, command=a1).grid(row=4, column=2, pady=10)
    botonm2 = Button(vent, text="m2", width=5, height=3, bg=color_boton, command=m2).grid(row=4, column=3, pady=10)
    botona2 = Button(vent, text="a2", width=5, height=3, bg=color_boton, command=a2).grid(row=4, column=4, pady=10)

def trabajo():
    vent = Tk()
    vent.title("Trabajo Y Energia")
    vent.geometry("800x250")
    vent.configure(background="paleturquoise")
    et1_1 = Label(vent, text="Fuerza", bg="snow").grid(row=0, column=0, pady=10)
    et1_2 = Label(vent, text="Masa", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Gravedad", bg="snow").grid(row=2, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1,columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1,columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1,columnspan=3, padx=5, pady=10)
    et1_4 = Label(vent, text="Trabajo", bg="snow").grid(row=0, column=4, pady=10)
    et1_5 = Label(vent, text="Fuerza", bg="snow").grid(row=1, column=4, pady=10)
    et1_6 = Label(vent, text="Δx", bg="snow").grid(row=2, column=4, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=0, column=5,columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=1, column=5,columnspan=3, padx=5, pady=10)
    txt5 = Entry(vent, font="Calibri 15")
    txt5.grid(row=2, column=5, columnspan=3, padx=5, pady=10)
    et1_7 = Label(vent, text="Potencia", bg="snow").grid(row=0, column=8, pady=10)
    et1_8 = Label(vent, text="Trabajo", bg="snow").grid(row=1, column=8, pady=10)
    et1_9 = Label(vent, text="Tiempo", bg="snow").grid(row=2, column=8,pady=10)
    txt6 = Entry(vent, font="Calibri 15")
    txt6.grid(row=0, column=9,columnspan=3, padx=5, pady=10)
    txt7 = Entry(vent, font="Calibri 15")
    txt7.grid(row=1, column=9,columnspan=3, padx=5, pady=10)
    txt8 = Entry(vent, font="Calibri 15")
    txt8.grid(row=2, column=9, columnspan=3,padx=5, pady=10)
    def fuerza():
        n = txt1.get()
        n1 = txt2.get()
        r = float(n) * float(n1)
        txt.insert(0, r)
    def masa():
        n=txt.get()
        n2=txt2.get()
        r=float(n)/float(n2)
        txt1.insert(0,r)
    def gravedad():
        n = txt.get()
        n1 = txt1.get()
        r = float(n) / float(n1)
        txt2.insert(0, r)

    botonf = Button(vent, text="F", width=5, height=3, bg=color_boton, command=fuerza).grid(row=4, column=0,pady=10)
    botona = Button(vent, text="M", width=5, height=3, bg=color_boton, command=masa).grid(row=4, column=1,pady=10)
    botong= Button(vent, text="G", width=5, height=3, bg=color_boton, command=gravedad).grid(row=4, column=2,pady=10)
    def trabajo():
        n =  txt4.get()
        n1 = txt5.get()
        r = float(n) * float(n1)
        txt3.insert(0, r)
    def fuerza_1():
        n = txt3.get()
        n1 = txt5.get()
        r = float(n) / float(n1)
        txt4.insert(0, r)
    def distancia():
        n = txt3.get()
        n1 = txt4.get()
        r = float(n) / float(n1)
        txt5.insert(0, r)
    botont= Button(vent, text="T", width=5, height=3, bg=color_boton, command=trabajo).grid(row=4, column=5,pady=10)
    botonf1 = Button(vent, text="F", width=5, height=3, bg=color_boton, command=fuerza_1).grid(row=4, column=6, pady=10)
    botond = Button(vent, text="Δx", width=5, height=3, bg=color_boton, command=distancia).grid(row=4, column=7, pady=10)
    def potencia():
        n = txt7.get()
        n1 = txt8.get()
        r = float(n) / float(n1)
        txt6.insert(0, r)
    def trabajo_1():
         n = txt6.get()
         n1 = txt8.get()
         r = float(n) * float(n1)
         txt7.insert(0, r)
    def tiempo():
         n = txt7.get()
         n1 = txt6.get()
         r = float(n) / float(n1)
         txt8.insert(0, r)
    botonp = Button(vent, text="P", width=5, height=3, bg=color_boton, command=potencia).grid(row=4, column=9, pady=10)
    botonp = Button(vent, text="T", width=5, height=3, bg=color_boton, command=trabajo_1).grid(row=4, column=10, pady=10)
    botonp = Button(vent, text="t", width=5, height=3, bg=color_boton, command=tiempo).grid(row=4, column=11,pady=10)

def trabajoa():
    vent = Tk()
    vent.title("Trabajo Angular")
    vent.geometry("350x300")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Fuerza", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Δx", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="Ángulo A[∠A]", bg="snow").grid(row=2, column=0, pady=10)
    et3 = Label(vent, text="Trabajo w", bg="snow").grid(row=3, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    et4 = Label(vent, text="N", bg="snow").grid(row=0, column=4, pady=10)
    et5 = Label(vent, text="m", bg="snow").grid(row=1, column=4, pady=10)
    et6 = Label(vent, text="°", bg="snow").grid(row=2, column=4, pady=10)
    et7 = Label(vent, text="J", bg="snow").grid(row=3, column=4, pady=10)
    def trabajoa_1():
        n = txt.get()
        n1 = txt1.get()
        n2=txt2.get()
        r=float(n)*float(n1)
        r1=math.cos(math.radians(float(n2)))
        r2=r*r1
        txt3.insert(0,r2)

    botonta = Button(vent, text="Trabajo w", width=7, height=4, bg=color_boton, command=trabajoa_1).grid(row=4, column=1,pady=10)

def energia():
    vent = Tk()
    vent.title("Energia Potencial")
    vent.geometry("300x300")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Energia Potencial", bg="snow").grid(row=0, column=2, pady=10)
    et1 = Label(vent, text="Masa", bg="snow").grid(row=1, column=1, pady=10)
    et3 = Label(vent, text="Altura", bg="snow").grid(row=2, column=1, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=1, column=2, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=2, column=2, columnspan=3, padx=5, pady=10)
    et1 = Label(vent, text="Kg", bg="snow").grid(row=1, column=5, pady=10)
    et4 = Label(vent, text="m", bg="snow").grid(row=2, column=5, pady=10)
    et5 = Label(vent, text="Ep", bg="snow").grid(row=3, column=1, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=3 ,column=2, columnspan=3, padx=5, pady=10)
    def ep():
        n = txt.get()
        n1 = txt1.get()
        r= float(n)*float(n1)
        r1=r*9.81
        txt2.insert(0,r1)

    et6 = Label(vent, text="J", bg="snow").grid(row=3, column=5, pady=10)
    botonep = Button(vent, text="Ep", width=5, height=3,bg=color_boton, command=ep).grid(row=4, column=1, pady=10,padx=10)

def friccion():
    vent = Tk()
    vent.title("Fuerza de Friccion")
    vent.geometry("400x250")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Coeficiente de\nfricción estática(μs)", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Fuerza Normal", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="friccion estática(Fs)", bg="snow").grid(row=2, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    def festatica():
        n= txt.get()
        n1= txt1.get()
        r=float(n)*float(n1)
        txt2.insert(0,r)
    def normal():
        n = txt.get()
        n1 = txt2.get()
        r = float(n1) / float(n)
        txt1.insert(0, r)
    def cfestatica():
        n = txt1.get()
        n1 = txt2.get()
        r = float(n1) / float(n)
        txt.insert(0, r)
    botonestatica = Button(vent, text="Friccion\nEstatica", width=10, height=3, bg=color_boton,command=festatica).grid(row=4, column=1,  padx=5,pady=5)
    botonestatica = Button(vent, text="Fuerza\nNormal", width=10, height=3, bg=color_boton, command=normal).grid(row=4, column=2, padx=5,pady=5)
    botonestatica = Button(vent, text="Coeficiente\nde\nFriccion", width=10, height=3, bg=color_boton, command=cfestatica).grid(row=4,column=3,padx=5,pady=5)

def torque():
    vent = Tk()
    vent.title("Torque")
    vent.geometry("350x300")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Fuerza", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Desplazamiento", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="θ", bg="snow").grid(row=2, column=0, pady=10)
    et6 = Label(vent, text="Torque", bg="snow").grid(row=0, column=3, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    et3 = Label(vent, text="N", bg="snow").grid(row=0, column=4, pady=10)
    et4 = Label(vent, text="m", bg="snow").grid(row=1, column=4, pady=10)
    et5 = Label(vent, text="θ", bg="snow").grid(row=2, column=4, pady=10)
    et7 = Label(vent, text="Torque", bg="snow").grid(row=3, column=0, pady=10)
    et7 = Label(vent, text="Nm", bg="snow").grid(row=3, column=4, pady=10)
    def torque_1():
        n = txt1.get()
        n1 = txt2.get()
        n2=txt3.get()
        r = float(n) * float(n1)
        r1=math.sin(float(n2))
        r2=r*r1
        txt4.insert(0, r2)

    botonestatica = Button(vent, text="Torque", width=8, height=3, bg=color_boton,command=torque_1).grid(row=4, column=1, padx=5, pady=5)

def  incerciaesfera():
        vent = Tk()
        vent.title("Momento de Inercia en Esfera")
        vent.geometry("300x250")
        vent.configure(background="paleturquoise")
        et1 = Label(vent, text="Masa", bg="snow").grid(row=1, column=0, pady=10)
        et2 = Label(vent, text="Radio", bg="snow").grid(row=2, column=0, pady=10)
        et3 = Label(vent, text="MI", bg="snow").grid(row=3, column=0, pady=10)
        txt = Entry(vent, font="Calibri 15")
        txt.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
        txt1 = Entry(vent, font="Calibri 15")
        txt1.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
        txt2 = Entry(vent, font="Calibri 15")
        txt2.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
        et4 = Label(vent, text="Kg", bg="snow").grid(row=1, column=4, pady=10)
        et5 = Label(vent, text="m", bg="snow").grid(row=2, column=4, pady=10)
        et6 = Label(vent, text="Kgm2", bg="snow").grid(row=3, column=4, pady=10)
        def esfera():
            n =  txt.get()
            n1 = txt1.get()
            r=float(n)*2/5
            r1=float(n1)*float(n1)
            r2=r*r1
            txt2.insert(0, r2)
        botonesfera = Button(vent, text="Momento\nde\nInercia", width=10, height=3, bg=color_boton, command=esfera).grid(row=4, column=1, padx=5,pady=5)
def inerciarectangular():
    vent = Tk()
    vent.title("Momento de Inercia Rectangular")
    vent.geometry("1000x300")
    vent.configure(background="paleturquoise")
    et1 = Label(vent, text="Eje x", bg="snow").grid(row=0, column=1, pady=10)
    et2 = Label(vent, text="Masa", bg="snow").grid(row=1, column=0, pady=10)
    et3 = Label(vent, text="Ancho", bg="snow").grid(row=2, column=0, pady=10)
    et3 = Label(vent, text="MIx", bg="snow").grid(row=3, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    et4 = Label(vent, text="Kg", bg="snow").grid(row=1, column=4, pady=10)
    et5 = Label(vent, text="m", bg="snow").grid(row=2, column=4, pady=10)
    et6 = Label(vent, text="Kgm²", bg="snow").grid(row=3, column=4, pady=10)
    def ejex():
        n = txt.get()
        n1 = txt1.get()
        r = ((float(n) * float(n1)**2)/12)
        txt2.insert(0, r)
    botonejex = Button(vent, text="Momento\nde\nInercia X", width=10, height=3, bg=color_boton,command=ejex).grid(row=5, column=1, padx=5, pady=5)

    et7 = Label(vent, text="Eje y", bg="snow").grid(row=0, column=6, pady=10,padx=15)
    et8 = Label(vent, text="Masa", bg="snow").grid(row=1, column=5, pady=10,padx=15)
    et9 = Label(vent, text="Longitud", bg="snow").grid(row=2, column=5, pady=10,padx=15)
    et10 = Label(vent, text="MIy", bg="snow").grid(row=3, column=5, pady=10,padx=15)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=1, column=6, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=2, column=6, columnspan=3, padx=5, pady=10)
    txt5 = Entry(vent, font="Calibri 15")
    txt5.grid(row=3, column=6, columnspan=3, padx=5, pady=10)
    et11 = Label(vent, text="Kg", bg="snow").grid(row=1, column=9, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=2, column=9, pady=10)
    et13 = Label(vent, text="Kgm²", bg="snow").grid(row=3, column=9, pady=10)
    def ejey():
        n2 = txt3.get()
        n3 = txt4.get()
        r1 = ((float(n2) * float(n3) ** 2) / 12)
        txt5.insert(0, r1)

    botonejey = Button(vent, text="Momento\nde\nInercia Y", width=10, height=3, bg=color_boton, command=ejey).grid(row=5,column=6,padx=5, pady=5)

    et14 = Label(vent, text="Eje z", bg="snow").grid(row=0, column=11, pady=10, padx=15)
    et15 = Label(vent, text="Masa", bg="snow").grid(row=1, column=10, pady=10, padx=15)
    et16 = Label(vent, text="Longitud", bg="snow").grid(row=2, column=10, pady=10, padx=15)
    et17 = Label(vent, text="Ancho", bg="snow").grid(row=3, column=10, pady=10, padx=15)
    et18 = Label(vent, text="MIz", bg="snow").grid(row=4, column=10, pady=10, padx=15)
    txt6 = Entry(vent, font="Calibri 15")
    txt6.grid(row=1, column=11, columnspan=3, padx=5, pady=10)
    txt7 = Entry(vent, font="Calibri 15")
    txt7.grid(row=2, column=11, columnspan=3, padx=5, pady=10)
    txt8 = Entry(vent, font="Calibri 15")
    txt8.grid(row=3, column=11, columnspan=3, padx=5, pady=10)
    txt9 = Entry(vent, font="Calibri 15")
    txt9.grid(row=4, column=11, columnspan=3, padx=5, pady=10)
    et11 = Label(vent, text="Kg", bg="snow").grid(row=1, column=15, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=2, column=15, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=3, column=15, pady=10)
    et13 = Label(vent, text="Kgm²", bg="snow").grid(row=4, column=15, pady=10)
    def ejez():
        n4 = txt6.get()
        n5 = txt7.get()
        n6 = txt8.get()
        r2 = (float(n4)/12)
        r3 = float(n5)*float(n5)
        r4 = float(n6)*float(n6)
        r5= r2*(r3+r4)
        txt9.insert(0, r5)

    botonejez = Button(vent, text="Momento\nde\nInercia Z", width=10, height=3, bg=color_boton, command=ejez).grid(row=5, column=11, padx=5, pady=5)


def inerciatriangualar():
    vent = Tk()
    vent.title("Mometo de Inercia Triangular")
    vent.geometry("1000x350")
    vent.configure(background="paleturquoise")
    et1 = Label(vent, text="Eje x", bg="snow").grid(row=0, column=1, pady=10)
    et2 = Label(vent, text="Masa", bg="snow").grid(row=1, column=0, pady=10)
    et3 = Label(vent, text="Altura", bg="snow").grid(row=2, column=0, pady=10)
    et4 = Label(vent, text="MIx", bg="snow").grid(row=3, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt1= Entry(vent, font="Calibri 15")
    txt1.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    et4 = Label(vent, text="Kg", bg="snow").grid(row=1, column=4, pady=10)
    et5 = Label(vent, text="m", bg="snow").grid(row=2, column=4, pady=10)
    et6 = Label(vent, text="Kgm²", bg="snow").grid(row=3, column=4, pady=10)
    def ejex():
        n = txt.get()
        n1 = txt1.get()
        r = float(n1)*float(n1)
        r1 =(float(n)*r)/18
        txt2.insert(0, r1)
    botonejez = Button(vent, text="Momento\nde\nInercia X", width=10, height=3, bg=color_boton, command=ejex).grid(row=5, column=1, padx=5, pady=5)

    et7 = Label(vent, text="Eje y", bg="snow").grid(row=0, column=6, pady=10,padx=15)
    et8 = Label(vent, text="Masa", bg="snow").grid(row=1, column=5, pady=10,padx=15)
    et9 = Label(vent, text="Base", bg="snow").grid(row=2, column=5, pady=10,padx=15)
    et10 = Label(vent, text="MIy", bg="snow").grid(row=3, column=5, pady=10,padx=15)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=1, column=6, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=2, column=6, columnspan=3, padx=5, pady=10)
    txt5 = Entry(vent, font="Calibri 15")
    txt5.grid(row=3, column=6, columnspan=3, padx=5, pady=10)
    et11 = Label(vent, text="Kg", bg="snow").grid(row=1, column=9, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=2, column=9, pady=10)
    et13 = Label(vent, text="Kgm²", bg="snow").grid(row=3, column=9, pady=10)

    def ejey():
        n2 = txt3.get()
        n3 = txt4.get()
        r2 = float(n3)*float(n3)
        r3 =(float(n2)*r2)/24
        txt5.insert(0, r3)

    botonejez = Button(vent, text="Momento\nde\nInercia Y", width=10, height=3, bg=color_boton, command=ejey).grid(row=5, column=6, padx=5, pady=5)

    et14 = Label(vent, text="Eje z", bg="snow").grid(row=0, column=11, pady=10, padx=15)
    et15 = Label(vent, text="Masa", bg="snow").grid(row=1, column=10, pady=10, padx=15)
    et16 = Label(vent, text="Base", bg="snow").grid(row=2, column=10, pady=10, padx=15)
    et17 = Label(vent, text="Altura", bg="snow").grid(row=3, column=10, pady=10, padx=15)
    et18 = Label(vent, text="MIz", bg="snow").grid(row=4, column=10, pady=10, padx=15)
    txt6 = Entry(vent, font="Calibri 15")
    txt6.grid(row=1, column=11, columnspan=3, padx=5, pady=10)
    txt7 = Entry(vent, font="Calibri 15")
    txt7.grid(row=2, column=11, columnspan=3, padx=5, pady=10)
    txt8 = Entry(vent, font="Calibri 15")
    txt8.grid(row=3, column=11, columnspan=3, padx=5, pady=10)
    txt9 = Entry(vent, font="Calibri 15")
    txt9.grid(row=4, column=11, columnspan=3, padx=5, pady=10)
    et11 = Label(vent, text="Kg", bg="snow").grid(row=1, column=15, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=2, column=15, pady=10)
    et12 = Label(vent, text="m", bg="snow").grid(row=3, column=15, pady=10)
    et13 = Label(vent, text="Kgm²", bg="snow").grid(row=4, column=15, pady=10)

    def ejey():
        n4 = txt6.get()
        n5 = txt7.get()
        n6 = txt8.get()
        r4 = (float(n4)/72)*((3*(float(n5)**2))+(4*(float(n6)**2)))
        txt9.insert(0, r4)

    botonejez = Button(vent, text="Momento\nde\nInercia Z", width=10, height=3, bg=color_boton, command=ejey).grid(row=5, column=11, padx=5, pady=5)

def fuerza_magnetica():
    vent = Tk()
    vent.title("Fuerza Magentica")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Magnitud Actual", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Longitud de varilla", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="Campo Magnetico", bg="snow").grid(row=2, column=0, pady=10)
    et3 = Label(vent, text="θ", bg="snow").grid(row=3, column=0, pady=10)
    et4 = Label(vent, text="Fuerza Magnetica", bg="snow").grid(row=4, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, columnspan=3, padx=5, pady=10)
    et5 = Label(vent, text="Amperio", bg="snow").grid(row=0, column=4, pady=10)
    et6 = Label(vent, text="m", bg="snow").grid(row=1, column=4, pady=10)
    et7 = Label(vent, text="Tesla", bg="snow").grid(row=2, column=4, pady=10)
    et8 = Label(vent, text="Rad", bg="snow").grid(row=3, column=4, pady=10)
    et9 = Label(vent, text="Newton", bg="snow").grid(row=4, column=4, pady=10)

    def fuerzam():
        n =  txt.get()
        n1 = txt1.get()
        n2 = txt2.get()
        n3=  txt3.get()
        n4=  float(n3)
        r = (float(n)*float(n1)*float(n2)*math.sin(n4))
        txt4.insert(0, r)

    botonfuerzam = Button(vent, text="Fuerza\nMagnetica", width=10, height=3, bg=color_boton, command=fuerzam).grid(row=5, column=1, padx=5, pady=5)

def fuerzama():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")
    var=StringVar()

    def fuerzama():
        n1 = txt1.get()
        n2 = txt2.get()
        m1=float(n1)
        m2=float(n2)

        fuerzama=m1/m2
        txt.insert(0, fuerzama)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=fuerzama).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=2)
    et1_2 = Label(vent, text="Carga", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Intensidad del campo", bg="snow").grid(row=2, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)

def velocidadm():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def velocidadm():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        velocidadm = m1+m2*m3
        txt.insert(0, velocidadm)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=velocidadm).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Aceleración", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Tiempo", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def aceleracionm():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def aceleracionm():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        aceleracionm = (m1*m2)/m3
        txt.insert(0, aceleracionm)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton,command=aceleracionm).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Carga", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Intensidad del campo", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="masa", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def posicionm():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def posicionm():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        posicionm = m1*m3+(m2*m3*m3)/2
        txt.insert(0, posicionm)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=posicionm).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Velocidad inicial", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Aceleración", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Tiempo", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def energiapotencial():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def energiapotencial():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        energiapotencial = (m1*m3*m3)/2-(m1*m2*m2)/2
        txt.insert(0, energiapotencial)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=energiapotencial).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="masa", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="velocidad inicial", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Velocidad", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)

def flujoelectrico():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("450x350")
    vent.configure(background="paleturquoise")

    def flujoelectrico():
        n1 = txt1.get()
        n2 = txt2.get()
        m1 = float(n1)
        m2 = float(n2)
        flujoelectrico = m1/m2
        txt.insert(0, flujoelectrico)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=flujoelectrico).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Carga encerrada", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Permitividad", bg="snow").grid(row=2, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)

def potencialma():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def potencialma():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        potencialma = (m1/4*3.1416)*(1/m2)-(1/m3)
        txt.insert(0, potencialma)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=potencialma).grid(row=6, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=2, column=0, pady=10)
    texto2 = Label(vent, text="El potencial en el punto P distante r1", bg="snow").grid(row=0, column=0, pady=10)
    texto3 = Label(vent, text="de la carga –Q y r2 de la carga +Q es:",bg="snow").grid(row=1, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=6, column=1)
    et1_2 = Label(vent, text="Carga(Q)", bg="snow").grid(row=3, column=0, pady=10)
    et1_3 = Label(vent, text="r2", bg="snow").grid(row=4, column=0, pady=10)
    et1_4 = Label(vent, text="r1", bg="snow").grid(row=5, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=3, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=4, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=5, column=1, columnspan=3, padx=5, pady=10)

def posicionm1():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def posicionm():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        posicionm = math.sqrt(m2*m2+((m1/2)*m1/2)+m1*(2*m2)*math.cos (m3))
        txt.insert(0, posicionm)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=posicionm).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Distancia del origen a P", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Distancia entre -Q Y +Q (r)", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Angulo de r con respecto al eje x", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)


def posicionm2():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")

    def posicionm2():
        n1 = txt1.get()
        n2 = txt2.get()
        n3 = txt3.get()
        m1 = float(n1)
        m2 = float(n2)
        m3 = float(n3)
        posicionm = math.sqrt(m2 * m2 + ((m1 / 2) * m1 / 2) - m1 * (2 * m2) * math.cos(m3))
        txt.insert(0, posicionm2)

    boton_Respuesta = Button(vent, text="Resultado", width=ancho_boton, height=alto_boton, bg=color_boton, command=posicionm2).grid(row=4, column=0, pady=10)
    texto = Label(vent, text="Ingrese los datos", bg="snow").grid(row=0, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=4, column=1)
    et1_2 = Label(vent, text="Distancia del origen a P", bg="snow").grid(row=1, column=0, pady=10)
    et1_3 = Label(vent, text="Distancia entre -Q Y +Q (r)", bg="snow").grid(row=2, column=0, pady=10)
    et1_4 = Label(vent, text="Angulo de r con respecto al eje x", bg="snow").grid(row=3, column=0, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, padx=5, columnspan=3, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, padx=5, columnspan=3, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)



def ohm():
    vent = Tk()
    vent.title("Ley de Ohm")
    vent.geometry("350x300")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Ley de Ohm", bg="snow").grid(row=0, column=2, pady=10)
    et1 = Label(vent, text="V", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="R", bg="snow").grid(row=2, column=0, pady=10)
    et3 = Label(vent, text="I", bg="snow").grid(row=3, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    et3 = Label(vent, text="V", bg="snow").grid(row=1, column=4, pady=10)
    et3 = Label(vent, text="Ω", bg="snow").grid(row=2, column=4, pady=10)
    et3 = Label(vent, text="A", bg="snow").grid(row=3, column=4, pady=10)
    def voltaje():
        n=txt1.get()
        n1=txt2.get()
        r=float(n)*float(n1)
        txt.insert(0,r)
    def intensidad():
        n = txt.get()
        n1 = txt1.get()
        r = float(n) / float(n1)
        txt2.insert(0, r)
    def resistencia():
        n = txt.get()
        n1 = txt2.get()
        r = float(n) / float(n1)
        txt1.insert(0, r)
    botonevoltaje = Button(vent, text="Voltaje", width=8, height=3, bg=color_boton, command=voltaje).grid(row=4, column=1, padx=5, pady=5)
    botonevoltaje = Button(vent, text="Intensidad", width=8, height=3, bg=color_boton, command=intensidad).grid(row=4,column=2,padx=5,pady=5)
    botonevoltaje = Button(vent, text="Resistencia", width=8, height=3, bg=color_boton, command=resistencia).grid(row=4,column=3, padx=5,pady=5)

def celectrico():
    vent = Tk()
    vent.title("Campo Electrico")
    vent.geometry("300x250")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="F", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Q", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="E", bg="snow").grid(row=2, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    et3 = Label(vent, text="N", bg="snow").grid(row=0, column=4, pady=10)
    et4 = Label(vent, text="C", bg="snow").grid(row=1, column=4, pady=10)
    et5 = Label(vent, text="N/C", bg="snow").grid(row=2, column=4, pady=10)
    def e():
       n= txt.get()
       n1= txt1.get()
       r=float(n)/float(n1)
       txt2.insert(0,r)
    def f():
       n= txt1.get()
       n1= txt2.get()
       r=float(n)*float(n1)
       txt.insert(0,r)
    def q():
       n= txt.get()
       n1= txt2.get()
       r=float(n)/float(n1)
       txt1.insert(0,r)

    botonevoltaje = Button(vent, text="E", width=6, height=3, bg=color_boton, command=e).grid(row=4,column=1,padx=5,pady=5)
    botonevoltaje = Button(vent, text="F", width=6, height=3, bg=color_boton, command=f).grid(row=4, column=2,padx=5, pady=5)
    botonevoltaje = Button(vent, text="Q", width=6, height=3, bg=color_boton, command=q).grid(row=4, column=3, padx=5,pady=5)

def capacitancia():
    vent = Tk()
    vent.title("Capacitancia")
    vent.geometry("350x300")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Q\nCarga electrica", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="V\nPotencial Electrico", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="C\nCapacitancia", bg="snow").grid(row=2, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    def capacitanica_1():
        n = txt.get()
        n1 = txt1.get()
        r = (float(n) / float(n1))
        txt2.insert(0, r)
    def carga():
        n = txt1.get()
        n1 = txt2.get()
        r =(float(n) * float(n1))
        txt.insert(0, r)
    def potencial():
        n = txt.get()
        n1 = txt2.get()
        r = (float(n) / float(n1))
        txt1.insert(0, r)

    botonevoltaje = Button(vent, text="C", width=6, height=3, bg=color_boton, command=capacitanica_1).grid(row=4, column=1, padx=5,pady=5)
    botonevoltaje = Button(vent, text="V", width=6, height=3, bg=color_boton, command=potencial).grid(row=4, column=2, padx=5,pady=5)
    botonevoltaje = Button(vent, text="Q", width=6, height=3, bg=color_boton, command=carga).grid(row=4, column=3, padx=5, pady=5)

def epalmacenada():
        vent = Tk()
        vent.title("Energia Potencial Almacenada")
        vent.geometry("350x300")
        vent.configure(background="paleturquoise")
        et = Label(vent, text="Carga electrica", bg="snow").grid(row=0, column=0, pady=10)
        et1 = Label(vent, text="Capacitancia", bg="snow").grid(row=1, column=0, pady=10)
        et2 = Label(vent, text="Ep", bg="snow").grid(row=2, column=0, pady=10)
        txt = Entry(vent, font="Calibri 15")
        txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
        txt1 = Entry(vent, font="Calibri 15")
        txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
        txt2 = Entry(vent, font="Calibri 15")
        txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
        et3 = Label(vent, text="Coul", bg="snow").grid(row=0, column=4, pady=10)
        et4 = Label(vent, text="f", bg="snow").grid(row=1, column=4, pady=10)
        et5 = Label(vent, text="J", bg="snow").grid(row=2, column=4, pady=10)
        def epotenciala():
            n = txt.get()
            n1 = txt1.get()
            r = ((float(n)**2)/(2*float(n1)))
            txt2.insert(0, r)

        botoneepa = Button(vent, text="Ep", width=6, height=3, bg=color_boton, command=epotenciala).grid(row=4, column=1,padx=5, pady=5)
def leydehooke():
    vent = Tk()
    vent.title("Ley de Hooke")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Carga", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Alargamiento Δx", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="Zona", bg="snow").grid(row=2, column=0, pady=10)
    et3 = Label(vent, text="Longitud Inical", bg="snow").grid(row=3, column=0, pady=10)
    et4 = Label(vent, text="Ley de Hooke", bg="snow").grid(row=4, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    txt3 = Entry(vent, font="Calibri 15")
    txt3.grid(row=3, column=1, columnspan=3, padx=5, pady=10)
    txt4 = Entry(vent, font="Calibri 15")
    txt4.grid(row=4, column=1, columnspan=3, padx=5, pady=10)
    et5 = Label(vent, text="N", bg="snow").grid(row=0, column=4, pady=10)
    et6 = Label(vent, text="m", bg="snow").grid(row=1, column=4, pady=10)
    et7 = Label(vent, text="m²", bg="snow").grid(row=2, column=4, pady=10)
    et8 = Label(vent, text="m", bg="snow").grid(row=3, column=4, pady=10)
    et9 = Label(vent, text="Pascal", bg="snow").grid(row=4, column=4, pady=10)
    def hooke():
        n=txt.get()
        n1=txt1.get()
        n2=txt2.get()
        n3=txt3.get()
        r=float(n)*float(n1)
        r1=float(n2)*float(n3)
        r2=r/(r1)
        txt4.insert(0,r2)
    botonevoltaje = Button(vent, text="Ley de Hooke", width=10, height=3, bg=color_boton, command=hooke).grid(row=5, column=1,pady=5)

def epelastica():
    vent = Tk()
    vent.title("Energia Potencial Elastica")
    vent.geometry("400x250")
    vent.configure(background="paleturquoise")
    et = Label(vent, text="Constante elástica [k]", bg="snow").grid(row=0, column=0, pady=10)
    et1 = Label(vent, text="Desplazamiento [x]", bg="snow").grid(row=1, column=0, pady=10)
    et2 = Label(vent, text="Ep", bg="snow").grid(row=2, column=0, pady=10)
    txt = Entry(vent, font="Calibri 15")
    txt.grid(row=0, column=1, columnspan=3, padx=5, pady=10)
    txt1 = Entry(vent, font="Calibri 15")
    txt1.grid(row=1, column=1, columnspan=3, padx=5, pady=10)
    txt2 = Entry(vent, font="Calibri 15")
    txt2.grid(row=2, column=1, columnspan=3, padx=5, pady=10)
    et3 = Label(vent, text="N/m", bg="snow").grid(row=0, column=4, pady=10)
    et4 = Label(vent, text="m", bg="snow").grid(row=1, column=4, pady=10)
    et5 = Label(vent, text="J", bg="snow").grid(row=2, column=4, pady=10)
    def elastica():
        n = txt.get()
        n1 = txt1.get()
        r=((1/2*float(n))*(float(n1)**2))
        txt2.insert(0,r)

    botonevoltaje = Button(vent, text="Energia Potencial\nElastica", width=14, height=3, bg=color_boton, command=elastica).grid(row=4,column=1,pady=5)

def Movdecarga():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")
    boton_fuerzama = Button(vent, text="Fuerza", width=ancho_boton, height=alto_boton, bg=color_boton,command=fuerzama).grid(row=1, column=1, pady=10)
    boton_aceleracionm = Button(vent, text="Aceleración", width=ancho_boton, height=alto_boton, bg=color_boton,command=aceleracionm).grid(row=1, column=2, pady=10, padx=5)
    boton_velocidadm = Button(vent, text="Velocidad", width=ancho_boton, height=alto_boton, bg=color_boton,command=velocidadm).grid(row=2, column=1, pady=10)
    boton_posicionm = Button(vent, text="Posición", width=ancho_boton, height=alto_boton, bg=color_boton,command=posicionm).grid(row=2, column=2, pady=10, padx=5)
    boton_energiapotencial = Button(vent, text="Energía potencial", width=ancho_boton, height=alto_boton, bg=color_boton, command=energiapotencial).grid(row=3, column=1, pady=10, padx=5)
    vent.mainloop()
def Dipoloelectrico():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x350")
    vent.configure(background="paleturquoise")
    boton_potencialma = Button(vent, text="Potencial", width=ancho_boton, height=alto_boton, bg=color_boton,command=potencialma).grid(row=1, column=1, pady=10)
    boton_posicionm = Button(vent, text="Posición con\nrespecto a -Q", width=ancho_boton, height=alto_boton, bg=color_boton,command=posicionm).grid(row=1, column=2, pady=10, padx=5)
    boton_posicionm2 = Button(vent, text="Posición con\nrespecto a +Q", width=ancho_boton, height=alto_boton, bg=color_boton,command=posicionm).grid(row=2, column=1, pady=10, padx=5)
    vent.mainloop()

def Movimientorectilíneouniforme():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("470x350")
    vent.configure(background="paleturquoise")
    boton_Velocidadmru= Button(vent, text="Velocidad", width=ancho_boton, height=alto_boton, bg=color_boton,command=Velocidadmru).grid(row=1, column=1, pady=10, padx=5)
    boton_Tiempomru = Button(vent, text="Tiempo", width=ancho_boton, height=alto_boton, bg=color_boton, command=Tiempomru).grid(row=1, column=2, pady=10, padx=5)
    boton_Posiciónmru = Button(vent, text="Posición", width=ancho_boton, height=alto_boton, bg=color_boton, command=Posiciónmru).grid(row=2, column=1, pady=10, padx=5)
    vent.mainloop()

def MRUA():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("700x350")
    vent.configure(background="paleturquoise")
    boton_Velocidadinicialmrua = Button(vent, text="Velocidad inicial", width=ancho_boton, height=alto_boton, bg=color_boton, command=Velocidadinicialmrua).grid(row=1, column=1, pady=10, padx=5)
    boton_Velocidadfinalmrua = Button(vent, text="Velocidad final", width=ancho_boton, height=alto_boton, bg=color_boton, command=Velocidadfinalmrua).grid(row=1, column=2, pady=10, padx=5)
    boton_Tiempomrua = Button(vent, text="Tiempo", width=ancho_boton, height=alto_boton, bg=color_boton,command=Tiempomrua).grid(row=1, column=3, pady=10, padx=5)
    boton_Posiciónimrua = Button(vent, text="Posición inicial", width=ancho_boton, height=alto_boton, bg=color_boton,command=Posiciónimrua).grid(row=2, column=1, pady=10, padx=5)
    boton_Posiciónfmrua = Button(vent, text="Posición final", width=ancho_boton, height=alto_boton, bg=color_boton,command=Posiciónfmrua).grid(row=2, column=2, pady=10, padx=5)
    boton_Aceleraciónmrua = Button(vent, text="Aceleración", width=ancho_boton, height=alto_boton, bg=color_boton,command=Aceleraciónmrua).grid(row=2, column=3, pady=10, padx=5)
    vent.mainloop()

def Caídalibre():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("470x350")
    vent.configure(background="paleturquoise")
    boton_Velocidadfinalcl = Button(vent, text="Velocidad final", width=ancho_boton, height=alto_boton, bg=color_boton,command=Velocidadfinalcl).grid(row=1, column=1, pady=10)
    boton_Alturainicialcl = Button(vent, text="Altura inicial", width=ancho_boton, height=alto_boton, bg=color_boton,command=Alturainicialcl).grid(row=1, column=2, pady=10, padx=5)
    boton_Tiempocl = Button(vent, text="Tiempo", width=ancho_boton, height=alto_boton, bg=color_boton,command=Tiempocl).grid(row=2, column=1, pady=10, padx=5)
    boton_Alturadespuésdeuntiempocl = Button(vent, text="Altura en x tiempo", width=ancho_boton, height=alto_boton, bg=color_boton,command=Alturadespuésdeuntiempocl).grid(row=2, column=2, pady=10, padx=5)
    vent.mainloop()
def dinamica():
    vent = Tk()
    vent.title("Dinamica")
    vent.geometry("500x400")
    vent.configure(background="paleturquoise")
    boton_2Ley_Newton= Button(vent, text="Segunda ley de newton", width=ancho_boton, height=alto_boton, bg=color_boton,command=segundaley).grid(row=1, column=0, pady=10)
    boton_3Ley_Newton = Button(vent, text="Tercera ley de newton", width=ancho_boton, height=alto_boton, bg=color_boton,command=terceraley).grid(row=1, column=1, pady=10,padx=5)
    botonTrabajo = Button(vent, text="Trabajo Y Energia", width=ancho_boton, height=alto_boton,bg=color_boton,command=trabajo).grid(row=1, column=2, pady=5)
    botonenergia= Button(vent, text="Energia Potencial", width=ancho_boton, height=alto_boton, bg=color_boton,command=energia).grid(row=2, column=1, pady=5)
    botonenergia = Button(vent, text="Fuerza de Friccion", width=ancho_boton, height=alto_boton, bg=color_boton,command=friccion).grid(row=2, column=0, pady=5)
    botontorque = Button(vent, text="Torque", width=ancho_boton, height=alto_boton, bg=color_boton,command=torque).grid(row=2, column=2, pady=5)
    botontrabajoa = Button(vent, text="Trabajo Angular", width=ancho_boton, height=alto_boton, bg=color_boton,command=trabajoa).grid(row=3, column=0, pady=5)
    botoninercia_1=Button(vent, text="Momento de Inercia\nEsfera Solida", width=ancho_boton, height=alto_boton, bg=color_boton,command=incerciaesfera).grid(row=3, column=1, pady=5)
    botontrabajoa = Button(vent, text="Momento de Inercia\nPlaca Rectangular", width=ancho_boton, height=alto_boton, bg=color_boton,command=inerciarectangular).grid(row=3, column=2, pady=5)
    botontrabajoa = Button(vent, text="Momento de Inercia\nPlaca Triangular", width=ancho_boton, height=alto_boton, bg=color_boton, command=inerciatriangualar).grid(row=4, column=0, pady=5)


def electro():
    vent = Tk()
    vent.title("Electromagnetismo")
    vent.geometry("400x300")
    vent.configure(background="paleturquoise")
    botonofuerzam = Button(vent, text="Fuerza Magnetica", width=ancho_boton, height=alto_boton, bg=color_boton, command=fuerza_magnetica).grid(row=1, column=0, pady=5)
    boton_Movdecarga = Button(vent, text="Mov. de una carga\nen un campo\neléctrico uniforme", width=ancho_boton,height=alto_boton, bg=color_boton, command=Movdecarga).grid(row=1, column=1, pady=10)
    boton_Leydegaus = Button(vent, text="Flujo eléctrico", width=ancho_boton, height=alto_boton, bg=color_boton, command=flujoelectrico).grid(row=2, column=0, pady=10, padx=5)
    boton_Dipoloelectrico = Button(vent, text="Dipolo eléctrico", width=ancho_boton, height=alto_boton, bg=color_boton,command=Dipoloelectrico).grid(row=2, column=1, pady=10, padx=5)
def circuitos():
    vent = Tk()
    vent.title("Circuitos")
    vent.geometry("600x150")
    vent.configure(background="paleturquoise")
    botonohm = Button(vent, text="Ley de Ohm", width=ancho_boton, height=alto_boton, bg=color_boton,command=ohm).grid(row=1, column=0, pady=5,padx=5)
    botoncampoe = Button(vent, text="Campo Electrico", width=ancho_boton, height=alto_boton, bg=color_boton,command=celectrico).grid(row=1, column=1, pady=5, padx=5)
    botoncapacitancia = Button(vent, text="Capacitancia", width=ancho_boton, height=alto_boton, bg=color_boton,command=capacitancia).grid(row=1, column=2, pady=5, padx=5)
    botoncapacitancia = Button(vent, text="Energia Potencial\nAlmacenada", width=ancho_boton, height=alto_boton, bg=color_boton,command=epalmacenada).grid(row=1, column=3, pady=5, padx=5)
def resortes():
    vent = Tk()
    vent.title("Resortes y Elasticidad")
    vent.geometry("350x200")
    vent.configure(background="paleturquoise")
    boton_LeydeHooke = Button(vent, text="Ley de Hooke", width=ancho_boton, height=alto_boton, bg=color_boton,command=leydehooke).grid(row=1, column=0, pady=5, padx=5)
    boton_Epelastica = Button(vent, text="Energia Potencial\nElastica", width=ancho_boton, height=alto_boton, bg=color_boton,command=epelastica).grid(row=1, column=1, pady=5, padx=5)

def cinematica():
    vent = Tk()
    vent.title("Movimiento rectilíneo uniforme")
    vent.geometry("450x200")
    vent.configure(background="paleturquoise")
    boton_Movimientorectilíneouniforme= Button(vent, text="Movimiento rectilíneo\nuniforme", width=ancho_boton, height=alto_boton, bg=color_boton,command=Movimientorectilíneouniforme).grid(row=1, column=1, pady=10,padx=5)
    boton_MRUA = Button(vent, text="Movimiento rectilíneo\nuniforme acelerado", width=ancho_boton, height=alto_boton,bg=color_boton,command=MRUA).grid(row=1, column=2, pady=10, padx=5)
    boton_Caídalibre= Button(vent, text="Caída libre", width=ancho_boton, height=alto_boton, bg=color_boton, command=Caídalibre).grid(row=1, column=3, pady=10, padx=5)
    vent.mainloop()


#Menu
boton_cinematica = Button(vent, text = "Cinemática", width = ancho_boton, height = alto_boton,bg=color_boton,command=cinematica).grid(row=1,column=0,pady=10)
boton_Dinamica = Button(vent, text = "Dinamica", width = ancho_boton, height = alto_boton,bg=color_boton,command=dinamica).grid(row=1,column=1,pady=5,padx=5)
boton_electro = Button(vent, text = "Electromagnetismo", width = ancho_boton, height = alto_boton,bg=color_boton,command=electro).grid(row=1,column=2,pady=5,padx=5)
boton_circuitos= Button(vent, text = "Circuitos", width = ancho_boton, height = alto_boton,bg=color_boton,command=circuitos).grid(row=2,column=0,pady=5,padx=5)
boton_Resortes= Button(vent, text = "Resortes\nY\nElasticidad", width = ancho_boton, height = alto_boton,bg=color_boton,command=resortes).grid(row=2,column=1,pady=5,padx=5)
vent.mainloop()